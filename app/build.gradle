apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

//Room插件
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.liang.kotlin4android"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //noinspection GradleDependency
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
//    implementation "org.jetbrains.anko:anko-commons:0.10.8"
    //anko-common包编译配置
    implementation "org.jetbrains.anko:anko-common:$anko_version"
    implementation 'com.google.android.material:material:1.2.0'
    //retrofit2.0
    implementation 'com.squareup.retrofit2:converter-gson:2.6.1'
    //okHttp提供的请求日志拦截器
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.5.0'
    implementation 'com.squareup.retrofit2:retrofit:2.6.1'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    //JetPack组件会在创建项目（AndroidX）的时候自动被包进去，但是，如果想使用ViewModel组件，还需要添加lifecycle依赖
    implementation "androidx.lifecycle:lifecycle-extensions:2.1.0"
    //LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.2.0-alpha05"
    //Room依赖库
    implementation "androidx.room:room-runtime:2.1.0"
    //由于Room会根据我们在项目中声明的注解来动态生成代码，因为这里一定要使用kapt引入Room的编译时注解库，
    // 而启用编译时注解功能则一定要先添加kotlin-kapt插件，注意kapt只能在kotlin项目中使用，如果是Java项目的话，使用annotationProcessor即可
    kapt "androidx.room:room-compiler:2.1.0"
    //要想使用WorkManager，首先需要添加如下依赖
    implementation "androidx.work:work-runtime:2.2.0"
}
